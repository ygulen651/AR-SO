import { existsSync, statSync } from 'node:fs';
import { join } from 'node:path';
export function findFunctionByName(blueprintOrStack, name) {
    const func = blueprintOrStack?.resources?.find((r) => r?.type?.startsWith('sanity.function.') && r.name === name);
    if (!func)
        throw Error(`Unable to find function ${name}`);
    return func;
}
export function getFunctionSource(blueprintOrStack, name) {
    const func = findFunctionByName(blueprintOrStack, name);
    const { src } = func;
    if (!src)
        throw Error(`Function ${name} has no source code`);
    if (!existsSync(src))
        throw Error(`Function source not found: ${src}`);
    if (statSync(src).isDirectory()) {
        const indexPath = join(src, 'index.js');
        if (!existsSync(indexPath)) {
            throw Error(`Function directory ${src} has no index.js`);
        }
        return indexPath;
    }
    return src;
}
